"use strict";var map,restaurants=void 0,neighborhoods=void 0,cuisines=void 0,markers=[],lazyImages=[],logging=!1;document.addEventListener("DOMContentLoaded",function(e){serviceWorker(),fetchNeighborhoods(),fetchCuisines()});var fetchNeighborhoods=function(){window.localforage.getItem("restaurantData",function(e,t){t?self.restaurantList=t:DBHelper.fetchNeighborhoods(function(e,t){e||(self.neighborhoods=t,fillNeighborhoodsHTML())})})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,t){e||(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})};window.initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1});google.maps.event.addListenerOnce(self.map,"idle",function(){var e=document.querySelector("iframe");e.setAttribute("aria-hidden","true"),e.setAttribute("tabindex","-1")});updateRestaurants()};var updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,a=e[n].value,s=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(a,s,function(e,t){e||(resetRestaurants(t),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById("restaurants-list");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap(),lazyLoadImages()},createRestaurantHTML=function(e){var t=document.createElement("li"),n=document.createElement("figure"),r=document.createElement("img"),a=document.createElement("figcaption");n.className="restaurant-fig",r.className="restaurant-img",a.className="restaurant-figcap";var s=DBHelper.imageUrlForRestaurant(e);r.src="",r.alt="An impression of restaurant "+e.name,a.innerHTML="Restaurant "+e.name;var i=s.slice(0,-17);r["data-src"]=i+".webp",r["data-srcset"]=i+"-250_small-min.webp 250w,\n                  "+i+"-400_medium-min.webp 400w",r.sizes="(min-width: 434px) 300px, calc(100% - 137px)",n.append(r),n.append(a),t.append(n);var o=document.createElement("h2");o.innerHTML=e.name,t.append(o);var c=document.createElement("p");c.innerHTML=e.neighborhood,t.append(c);var u=document.createElement("p");u.innerHTML=e.address,t.append(u);var l=document.createElement("a");return l.innerHTML="View Details",l.href=DBHelper.urlForRestaurant(e),l.setAttribute("role","button"),l.setAttribute("aria-label","Press to view details of restaurant "+e.name),t.append(l),t},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})},lazyLoadImages=function(){var e=[].slice.call(document.querySelectorAll(".restaurant-img"));if("IntersectionObserver"in window){var n=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){var t=e.target;t.src=t["data-src"],t.srcset=t["data-srcset"],n.unobserve(t)}})});e.forEach(function(e){n.observe(e)})}},serviceWorker=function(){navigator.serviceWorker&&navigator.serviceWorker.register("/service-worker.js",{scope:"/"}).then(function(e){}).catch(function(e){})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
