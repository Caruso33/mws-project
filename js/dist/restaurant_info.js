"use strict";let restaurant,reviews;var map;window.initMap=(()=>{const e=document.createElement("img"),t="/img/webp/maps-";e.src=`${t}500.webp`,e.srcset=`${t}360.webp 360w, ${t}500.webp 500w, ${t}700.webp 700w, ${t}900.webp 900w, ${t}1200.webp 1200w, ${t}1600.webp 1600w`,e.alt="Google Maps Preview";const n=document.getElementById("map");n.appendChild(e),fetchRestaurantFromURL((e,t)=>{e?console.error(e):n.addEventListener("click",e=>{self.map=new google.maps.Map(n,{zoom:16,center:t.latlng,scrollwheel:!1});google.maps.event.addListenerOnce(self.map,"idle",()=>{let e=document.querySelector("iframe");e.setAttribute("aria-hidden","true"),e.setAttribute("tabindex","-1")});DBHelper.mapMarkerForRestaurant(self.restaurant,self.map)},!0),fillBreadcrumb()})});const fetchRestaurantFromURL=async e=>{if(self.restaurant)return console.log("fetchRestaurantFromURL: restaurant already fetched!"),void e(null,self.restaurant);const t=getParameterByName("id");t?(await DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,console.log("restaurant",self.restaurant),n?e(null,n):console.error(t)}),await DBHelper.fetchRestaurantReviewsById(t,(e,t)=>{t?self.reviews=t:console.error(e)})):(error="No restaurant id in URL",e(error,null)),fillRestaurantHTML(self.restaurant)},fillRestaurantHTML=e=>{const t=document.getElementById("restaurant-name");console.log(e),t.innerHTML=e.name;const n=()=>{let t=!!e.is_favorite&&JSON.parse(e.is_favorite);const r=document.querySelector("#favorite");for(;r.firstChild;)r.removeChild(r.firstChild);const a=document.createElement("button"),o=document.createElement("p");o.innerHTML="click to change favorite state",a.innerHTML=t?`${String.fromCodePoint(127775)} This is a favorite`:`${String.fromCodePoint(9723)} No favorite of yours`,a.addEventListener("click",async()=>{e.is_favorite=!t;try{await window.localStorage.setItem(`restaurantJson?id=${e.id}`,JSON.stringify(self.restaurant)),await fetch(`http://localhost:1337/restaurants/${e.id}/?is_favorite=${!t}`,{method:"PUT",headers:{Accept:"application/json"}})}catch(t){console.log("You are offline, saving favorite data to storage",t),window.addEventListener("online",async()=>{console.log("You are online, sending favorite data to server");try{const t=await JSON.parse(window.localStorage.getItem(`restaurantJson?id=${e.id}`));await fetch(`http://localhost:1337/restaurants/${t.id}/?is_favorite=${t.is_favorite}`,{method:"PUT",headers:{Accept:"application/json"}})}catch(e){console.error("failed to update favorite to server")}})}finally{n()}}),r.appendChild(a),r.appendChild(o)};n(),document.getElementById("restaurant-address").innerHTML=e.address;const r=document.getElementById("restaurant-img"),a=document.getElementById("restaurant-figcap");r.className="restaurant-img",r.src=DBHelper.imageUrlForRestaurant(e),r.alt=`An impression of restaurant ${e.name}`,a.innerHTML=`Restaurant ${e.name}`;const o=r.src.slice(0,-17);r.srcset=`${o}-250_small-min.webp 250w,\n                  ${o}-400_medium-min.webp 400w,\n                  ${o}-600_large-min.webp 600w,\n                  ${o}-800_orig-min.webp 800w\n                  `,r.sizes="90vw",document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML(e.id)},fillRestaurantHoursHTML=(e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const o=document.createElement("td");o.innerHTML=e[n],r.appendChild(o),t.appendChild(r)}},fillReviewsHTML=(e,t=self.reviews)=>{const n=document.getElementById("reviews-container");if(n.childNodes.length<4){const e=document.createElement("h2");e.innerHTML="Reviews",n.appendChild(e)}if(!t){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void n.appendChild(e)}const r=document.getElementById("reviews-list");t.forEach(e=>{r.appendChild(createReviewHTML(e))});const a=document.createElement("form");a.setAttribute("method","post"),a.setAttribute("action","http://localhost:1337/reviews"),a.classList.add("newReview");const o=document.createElement("textarea");o.id="textarea",o.setAttribute("placeholder","Your review goes here..."),o.setAttribute("name","comments");const i=document.createElement("input");i.id="inputForId",i.setAttribute("name","restaurant_id"),i.setAttribute("value",self.restaurant.id),i.style.display="none";const s=document.createElement("input");s.setAttribute("name","name"),s.setAttribute("type","text"),s.setAttribute("placeholder","Your Name");const l=document.createElement("button");l.innerHTML="Create review",l.setAttribute("type","submit");const c=document.createElement("select");c.setAttribute("name","rating");let d="";for(let e=1;e<6;e++)d+=`${String.fromCodePoint(11088)}`,this[`option${e}`]=document.createElement("option"),this[`option${e}`].setAttribute("value",e),this[`option${e}`].innerHTML=`${d} ${e} Stars`,c.appendChild(this[`option${e}`]);l.innerHTML="Create review",l.setAttribute("type","submit"),a.appendChild(i),a.appendChild(s),a.appendChild(o),a.appendChild(c),a.appendChild(l),a.onsubmit=(async t=>{t.preventDefault();const n={};for(let e=0;e<4;e++)n[t.target[e].name]=t.target[e].value;r.insertBefore(createReviewHTML(n),r.childNodes[r.childNodes.length-1]);try{const t=await JSON.parse(await window.localStorage.getItem(`reviewsJson?id=${e}`));t.push(n),await window.localStorage.setItem(`reviewsJson?id=${e}`,JSON.stringify(t));const r=JSON.stringify(n);await fetch("http://localhost:1337/reviews",{method:"POST",body:r})}catch(t){console.log("You are offline, saving review to storage "),window.addEventListener("online",async()=>{console.log("You are online, sending review to server");try{const t=await JSON.parse(window.localStorage.getItem(`reviewsJson?id=${e}`)),n=JSON.stringify(t[t.length-1]);console.log(n),await fetch("http://localhost:1337/reviews",{method:"POST",body:n})}catch(e){console.error("failed to update review to server")}})}}),r.appendChild(a),n.appendChild(r)},createReviewHTML=e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,n.classList.add("review-author");const r=document.createElement("span"),a=new Date(e.createdAt||Date.now()),o=a.getUTCMonth()+1,i=a.getUTCDate(),s=a.getUTCFullYear();r.innerHTML=s+"/"+o+"/"+i,r.classList.add("review-date"),n.appendChild(r),t.appendChild(n);const l=document.createElement("p");l.innerHTML=`Rating: ${e.rating}`,l.classList.add("review-rating"),t.appendChild(l);const c=document.createElement("p");return c.innerHTML=e.comments,c.classList.add("review-comments"),t.appendChild(c),t},fillBreadcrumb=(e=self.restaurant)=>{const t=document.getElementById("breadcrumb");if(t.childNodes.length<4){const n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}},getParameterByName=(e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null};