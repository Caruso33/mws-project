class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static async fetchRestaurants(t){window.localStorage.getItem("restaurantsJson",(e,a)=>{if(a)return t(null,a)});try{const e=await fetch(DBHelper.DATABASE_URL),a=await e.json();t(null,a),window.localStorage.setItem("restaurantsJson",a)}catch(e){t(e.message,null)}}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.find(e=>e.id==t);a?e(null,a):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.filter(e=>e.cuisine_type==t);e(null,a)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.filter(e=>e.neighborhood==t);e(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,a){DBHelper.fetchRestaurants((l,s)=>{if(l)a(l,null);else{let l=s;"all"!=t&&(l=l.filter(e=>e.cuisine_type==t)),"all"!=e&&(l=l.filter(t=>t.neighborhood==e)),a(null,l)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].neighborhood),l=e.filter((t,a)=>e.indexOf(t)==a);t(null,l)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].cuisine_type),l=e.filter((t,a)=>e.indexOf(t)==a);t(null,l)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/webp/${t.id}-placeholder.webp`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}